// DO NOT EDIT!
// Code generated by ffjson <https://github.com/pquerna/ffjson>
// source: ./vendor/github.com/cloudfoundry/sonde-go/events/uuid.pb.go
// DO NOT EDIT!

package events

import (
	fflib "github.com/pquerna/ffjson/fflib/v1"
)

func (mj *UUID) MarshalJSON() ([]byte, error) {
	var buf fflib.Buffer
	if mj == nil {
		buf.WriteString("null")
		return buf.Bytes(), nil
	}
	err := mj.MarshalJSONBuf(&buf)
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}
func (mj *UUID) MarshalJSONBuf(buf fflib.EncodingBuffer) error {
	if mj == nil {
		buf.WriteString("null")
		return nil
	}
	var err error
	var obj []byte
	_ = obj
	_ = err
	buf.WriteString(`{ `)
	if mj.Low != nil {
		if true {
			buf.WriteString(`"low":`)
			fflib.FormatBits2(buf, uint64(*mj.Low), 10, false)
			buf.WriteByte(',')
		}
	}
	if mj.High != nil {
		if true {
			buf.WriteString(`"high":`)
			fflib.FormatBits2(buf, uint64(*mj.High), 10, false)
			buf.WriteByte(',')
		}
	}
	buf.Rewind(1)
	buf.WriteByte('}')
	return nil
}
